app.context.url=http://java:8080
server.servlet.context-path=/api/
server.port=8080
kafka.broker=kafka1:9091,kafka2:9092,kafka3:9093,kafka4:9094,kafka5:9095
kafka.deserializer.trustedpackages=com.decentralizer.spreadr.modules.appconfig.events
spring.messages.basename=messages
spring.datasource1.url=modularizr_postgres
spring.datasource1.port=5432
spring.datasource1.schema=docker
spring.datasource1.database=publisaiz
spring.datasource1.username=korsarz
spring.datasource1.password=!!??krykiet123
spring.mysqldatasource.url=jdbc:mysql://modularizr_mysql:3306/arthub
spring.mysqldatasource.password=arthub
spring.mysqldatasource.username=arthub
spring.jpa.properties.hibernate.default_schema=docker
spring.datasource.initialization-mode=always
spring.main.web-application-type=reactive
spring.http.log-request-details=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.web=INFO
#The bean 'springSecurityFilterChain', defined in class path resource [org/springframework/boot/actuate/autoconfigure/security/reactive/ReactiveManagementWebSecurityAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class] and overriding is disabled.
#Action:
#Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true
spring.main.allow-bean-definition-overriding=true